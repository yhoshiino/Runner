-Horizontal runner


Player : 
- autoRun player
- speed increasing by time (cap)
- four directions movement (limited by camera and limit)

Map :
- Obstacles ( wall(ex: spike), moving enemy, projectiles(w/ warning))
- boost : ON FIRE!!!
- Score (w/ collectibles, distance, checkpoint)
- finshed map
- infinite map (optionnal)

Menu :
- Main
- Level Selection
- Lose
- Pause
- Option

Assets :
- Player and obstacled/collectibles
- Texture Menu
- Music/sfx (Optionnal) :
    - bonus
    - death
    - music theme

Camera :
- Following camera
- shaking camera
- visual effect

Control :
- arrows, key or mouse movement
- pause button

Reference :
- geometry dash
- jetpack joyride
- rakoo's adventure



Technical aspect :
Getter
setter

Core:
    Managers:
        - EntityManager:
                    - including (player, obstacles)
                    - Entity Creation and destruction
                    - Keep references of all entity (std::shared_ptr)
                    - void updateAll(float deltatime)
                    - void drawAll(RenderWindow& window)
                    - void updateColisions
Base Class: Entity:
                Membre :
                - int Health
                - math::Vector2 Position, math::Vector2 Velocity, float Size, FloatRect hitbox
                - sf::Texture, sf::Sprite
                - State (Alive, Dead)
                Method :
                - virtual void update (float deltatime)
                - virtual void draw (sf::RenderWindow& window)
                - default constructor
                - virtual destructor
                - virtual bool isColliding(sf::FloatRect otherHitbox)
                - virtual void onHit(Entity* otherEntity);
Derived Class from Entity:
                    Player:
                    - void handleInputs (maybe in Game.hpp)
                    Obstacles:
                    - (we'll see)
                    




















